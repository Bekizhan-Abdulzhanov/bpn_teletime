from telebot import TeleBot
from flask import Flask
from waitress import serve
from apscheduler.schedulers.background import BackgroundScheduler
from dotenv import load_dotenv
import os
import warnings

from config import TOKEN, PORT
from handlers import register_handlers
from admin_handlers import register_admin_handlers
from schedulers import setup_scheduler
from notifier import setup_notifications

warnings.filterwarnings("ignore", message="Timezone offset does not match system offset")
load_dotenv()

bot = TeleBot(TOKEN)
app = Flask(__name__)

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
register_handlers(bot)
register_admin_handlers(bot)

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
scheduler = BackgroundScheduler()
setup_scheduler(scheduler, bot)
setup_notifications(scheduler, bot)
scheduler.start()

@app.route("/")
def index():
    return "ü§ñ BPN TeleTime –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ Flask + Telegram Polling
    print("[SCHEDULER] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –æ—Ç—á—ë—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.\n")
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—ã...")

    if os.getenv("RAILWAY_ENVIRONMENT"):  # Railway
        serve(app, host="0.0.0.0", port=PORT)
    else:
        app.run(host="0.0.0.0", port=PORT)
    
    bot.infinity_polling(skip_pending=True)
