import csv
from datetime import datetime
from telebot import TeleBot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, InputFile
from config import ADMIN_IDS
from storage import get_all_users, save_work_time
from reports import generate_excel_report_by_months


def register_admin_handlers(bot: TeleBot):
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç—ã
    @bot.message_handler(commands=['admin', 'menu'])
    def admin_menu(message):
        if message.from_user.id not in ADMIN_IDS:
            return bot.reply_to(message, "‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
        markup = InlineKeyboardMarkup(row_width=1)
        markup.add(
            InlineKeyboardButton("üïí –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", callback_data="change_time"),
            InlineKeyboardButton("üìä –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç—ã –≤—Å–µ–º", callback_data="send_all_reports"),
        )
        bot.send_message(message.chat.id, "üîß –ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", reply_markup=markup)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é
    @bot.callback_query_handler(func=lambda call: call.data in ['change_time', 'send_all_reports'])
    def handle_admin_actions(call):
        if call.from_user.id not in ADMIN_IDS:
            return bot.answer_callback_query(call.id, "‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
        if call.data == 'change_time':
            bot.send_message(call.message.chat.id,
                             "–í–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: user_id –¥–µ–π—Å—Ç–≤–∏–µ YYYY-MM-DD HH:MM:SS\n"
                             "–ü—Ä–∏–º–µ—Ä: 12345 –ü—Ä–∏—à–µ–ª –Ω–∞ —Ä–∞–±–æ—Ç—É 2025-07-04 08:30:00")
        else:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
            for uid, uname in get_all_users().items():
                buf = generate_excel_report_by_months(uid, uname)
                if buf:
                    filename = f"Report_{uname}_{datetime.now().strftime('%Y-%m-%d')}.xlsx"
                    bot.send_document(call.message.chat.id, InputFile(buf, filename), caption=f"–û—Ç—á—ë—Ç {uname}")
            bot.answer_callback_query(call.id, "‚úÖ –û—Ç—á—ë—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤—Å–µ–º.")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∞–¥–º–∏–Ω–æ–º –Ω–æ–≤–æ–π –æ—Ç–º–µ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
    @bot.message_handler(func=lambda m: m.from_user.id in ADMIN_IDS and len(m.text.split()) >= 3)
    def process_time_change(message):
        parts = message.text.split(' ', 2)
        try:
            user_id = int(parts[0])
            action = parts[1]
            ts = parts[2]
            save_work_time(user_id, action, ts)
            bot.reply_to(message, f"‚úÖ –û—Ç–º–µ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: {action} –¥–ª—è {user_id} –≤ {ts}")
        except Exception as e:
            bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞. –§–æ—Ä–º–∞—Ç: user_id –¥–µ–π—Å—Ç–≤–∏–µ YYYY-MM-DD HH:MM:SS. ({e})")



