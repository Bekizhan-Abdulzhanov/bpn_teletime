import os
import threading
import warnings
from flask import Flask
from waitress import serve
from telebot import TeleBot
from apscheduler.schedulers.background import BackgroundScheduler

from config import TOKEN, PORT
from handlers import register_handlers
from admin_handlers import register_admin_handlers
from schedulers import setup_scheduler
from notifier import setup_notifications

# üîï –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–æ —Ç–∞–π–º–∑–æ–Ω—É
warnings.filterwarnings("ignore", message="Timezone offset does not match system offset")

# üõë –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ç–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–¥–∞–Ω
if not TOKEN:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –î–æ–±–∞–≤—å –µ—ë –≤ Railway Variables –∏–ª–∏ .env —Ñ–∞–π–ª.")

# ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = TeleBot(TOKEN)

# üåê Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Railway ping –∏–ª–∏ healthcheck
app = Flask(__name__)

@app.route('/')
def index():
    return "‚úÖ BPN Teletime –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç."

def run_flask():
    serve(app, host="0.0.0.0", port=PORT)

if __name__ == "__main__":
    # üîÅ –ó–∞–ø—É—Å–∫–∞–µ–º Flask-—Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ (–¥–ª—è Railway)
    threading.Thread(target=run_flask).start()

    # üì¶ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã
    register_handlers(bot)
    register_admin_handlers(bot)

    # üóì –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á
    scheduler = BackgroundScheduler()
    setup_scheduler(scheduler, bot)
    setup_notifications(scheduler, bot)
    scheduler.start()

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—ã...")

    # üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    bot.remove_webhook()

    # üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º polling (–æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã)
    bot.infinity_polling(skip_pending=True)
