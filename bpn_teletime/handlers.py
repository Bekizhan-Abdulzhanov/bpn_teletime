from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from storage import save_work_time, update_user_status, is_user_approved, get_all_users
from reports import generate_excel_report
from config import ADMIN_ID

import os

from storage import is_user_approved

def register_handlers(bot):
    @bot.message_handler(commands=['start'])
    def start(message):
        print("[DEBUG] /start received from", message.from_user.id)
        if not is_user_approved(message.from_user.id):
            return bot.reply_to(message, "–ó–∞—è–≤–∫–∞ –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞.")
        bot.reply_to(message, "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –•–æ—Ä–æ—à–µ–π –≤–∞–º —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è.")

    @bot.message_handler(commands=['send_excel_report'])
    def send_excel_report(message):
        user_id = message.from_user.id

        if not is_user_approved(user_id):
            bot.reply_to(message, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏–ª–∏ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞.")
            return

        report_path = generate_excel_report(user_id)

        if report_path and os.path.exists(report_path):
            with open(report_path, 'rb') as file:
                bot.send_document(message.chat.id, file, caption="–í–∞—à –æ—Ç—á—ë—Ç –æ —Ä–∞–±–æ—á–µ–º –≤—Ä–µ–º–µ–Ω–∏.")
        else:
            bot.reply_to(message, "–û—Ç—á—ë—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –æ—Ç–º–µ—Ç–∫–∏.")

            from telebot.types import ReplyKeyboardMarkup, KeyboardButton

    @bot.message_handler(commands=['1'])
    def show_menu(message):
        if not is_user_approved(message.from_user.id):
            return bot.reply_to(message, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏–ª–∏ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞.")

        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(
            KeyboardButton("üçΩ –í—ã—à–µ–ª –Ω–∞ –æ–±–µ–¥"),
            KeyboardButton("üçΩ –í–µ—Ä–Ω—É–ª—Å—è —Å –æ–±–µ–¥–∞"),
            KeyboardButton("üèÅ –£—à–µ–ª —Å —Ä–∞–±–æ—Ç—ã")
        )
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

    @bot.message_handler(func=lambda message: message.text in [
        "üçΩ –í—ã—à–µ–ª –Ω–∞ –æ–±–µ–¥", "üçΩ –í–µ—Ä–Ω—É–ª—Å—è —Å –æ–±–µ–¥–∞", "üèÅ –£—à–µ–ª —Å —Ä–∞–±–æ—Ç—ã"
    ])
    def handle_work_time(message):
        if not is_user_approved(message.from_user.id):
            return bot.reply_to(message, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏–ª–∏ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–µ –æ–¥–æ–±—Ä–µ–Ω–∞.")

        user = message.from_user
        action_text = {
            "üçΩ –í—ã—à–µ–ª –Ω–∞ –æ–±–µ–¥": "–í—ã—à–µ–ª –Ω–∞ –æ–±–µ–¥",
            "üçΩ –í–µ—Ä–Ω—É–ª—Å—è —Å –æ–±–µ–¥–∞": "–í–µ—Ä–Ω—É–ª—Å—è —Å –æ–±–µ–¥–∞",
            "üèÅ –£—à–µ–ª —Å —Ä–∞–±–æ—Ç—ã": "–£—à–µ–ª —Å —Ä–∞–±–æ—Ç—ã"
        }.get(message.text)

        save_work_time(user.id, user.username, action_text)
        bot.reply_to(message, f"‚úÖ –í—ã –æ—Ç–º–µ—Ç–∏–ª–∏: {message.text}")
        print(f"[DEBUG] {user.username} - {action_text}")