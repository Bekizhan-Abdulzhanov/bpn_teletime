from apscheduler.schedulers.background import BackgroundScheduler
from storage import save_work_time, get_all_users
from reports import generate_excel_report_by_months
from config import ADMIN_ID
from datetime import datetime
import os


AUTO_USERS = {
    378268765: "ErlanNasiev",
    557174721: "BekizhanAbdulzhanov",
}


def setup_scheduler(scheduler, bot):

    scheduler.add_job(
        send_monthly_reports_to_admin,
        "cron",
        day="29,30",
        month="1-12",
        hour=8,
        minute=30,
        args=[bot],
        id="send_monthly_reports_default"
    )
    scheduler.add_job(
        send_monthly_reports_to_admin,
        "cron",
        day="27",
        month="2",
        hour=8,
        minute=30,
        args=[bot],
        id="send_monthly_reports_feb"
    )

    for user_id, name in AUTO_USERS.items():
        
        scheduler.add_job(save_work_time, 'cron', day_of_week='mon,wed', hour=8, minute=29, args=[user_id, name, '–ü—Ä–∏—à–µ–ª –Ω–∞ —Ä–∞–±–æ—Ç—É'])
        scheduler.add_job(save_work_time, 'cron', day_of_week='mon,wed', hour=12, minute=0, args=[user_id, name, '–í—ã—à–µ–ª –Ω–∞ –æ–±–µ–¥'])
        scheduler.add_job(save_work_time, 'cron', day_of_week='mon,wed', hour=13, minute=0, args=[user_id, name, '–í–µ—Ä–Ω—É–ª—Å—è —Å –æ–±–µ–¥–∞'])
        scheduler.add_job(save_work_time, 'cron', day_of_week='mon,wed', hour=17, minute=30, args=[user_id, name, '–£—à–µ–ª —Å —Ä–∞–±–æ—Ç—ã'])

        
        scheduler.add_job(save_work_time, 'cron', day_of_week='tue,thu', hour=8, minute=28, args=[user_id, name, '–ü—Ä–∏—à–µ–ª –Ω–∞ —Ä–∞–±–æ—Ç—É'])
        scheduler.add_job(save_work_time, 'cron', day_of_week='tue,thu', hour=12, minute=1, args=[user_id, name, '–í—ã—à–µ–ª –Ω–∞ –æ–±–µ–¥'])
        scheduler.add_job(save_work_time, 'cron', day_of_week='tue,thu', hour=13, minute=0, args=[user_id, name, '–í–µ—Ä–Ω—É–ª—Å—è —Å –æ–±–µ–¥–∞'])
        scheduler.add_job(save_work_time, 'cron', day_of_week='tue,thu', hour=17, minute=30, args=[user_id, name, '–£—à–µ–ª —Å —Ä–∞–±–æ—Ç—ã'])

        
        scheduler.add_job(save_work_time, 'cron', day_of_week='fri', hour=8, minute=27, args=[user_id, name, '–ü—Ä–∏—à–µ–ª –Ω–∞ —Ä–∞–±–æ—Ç—É'])
        scheduler.add_job(save_work_time, 'cron', day_of_week='fri', hour=12, minute=0, args=[user_id, name, '–í—ã—à–µ–ª –Ω–∞ –æ–±–µ–¥'])
        scheduler.add_job(save_work_time, 'cron', day_of_week='fri', hour=13, minute=0, args=[user_id, name, '–í–µ—Ä–Ω—É–ª—Å—è —Å –æ–±–µ–¥–∞'])
        scheduler.add_job(save_work_time, 'cron', day_of_week='fri', hour=17, minute=30, args=[user_id, name, '–£—à–µ–ª —Å —Ä–∞–±–æ—Ç—ã'])

# ‚úÖ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–æ–≤ –∞–¥–º–∏–Ω—É

def send_monthly_reports_to_admin(bot):
    now = datetime.now()
    month_name = now.strftime('%B')

    bot.send_message(ADMIN_ID, f"üì¶ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ –∑–∞ {month_name}:")

    for user_id, username in get_all_users().items():
        report_path = generate_excel_report_by_months(user_id)
        if report_path and os.path.exists(report_path):
            with open(report_path, 'rb') as file:
                bot.send_document(ADMIN_ID, file, caption=f"üìé –û—Ç—á–µ—Ç: {username}")
        else:
            bot.send_message(ADMIN_ID, f"‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}")
